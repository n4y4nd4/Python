# -*- coding: utf-8 -*-
"""nayanda_robers_DR4_TP3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nFhC25IIBeXgoFQaLmz2UPGihXYiLJXK

1- Utilize a biblioteca Pandas em linguagem Python para carregar a base que está no link abaixo (lembre-se de inspecionar o arquivo para utilizar a instrução de importação de forma que funcione corretamente). Faça a importação diretamente do Github, armazene os dados em um dataframe único e apresente este dataframe.
"""

import pandas as pd

url = "https://raw.githubusercontent.com/cassiusf/datasets/main/car_crashes.xlsx"

df = pd.read_excel(url)

print(df)

"""2- A partir da base completa da questão 01, utilize o método groupby() do Pandas para apresentar as seguintes informações, todas agrupadas pela variável ins_type:
Média, valor máximo e valor mínimo de ins_premium;
Média, soma total, valor máximo e valor mínimo de ins_losses.
"""

import pandas as pd

url = "https://raw.githubusercontent.com/cassiusf/datasets/main/car_crashes.xlsx"

df = pd.read_excel(url)

print(df.head())

grouped_stats = df.groupby('abbrev').agg({
    'ins_premium': ['mean', 'max', 'min'],
    'ins_losses': ['mean', 'sum', 'max', 'min']
})

grouped_stats.columns = ['ins_premium_mean', 'ins_premium_max', 'ins_premium_min',
                         'ins_losses_mean', 'ins_losses_sum', 'ins_losses_max', 'ins_losses_min']

print(grouped_stats)

"""3- Utilize as bibliotecas SQLAlchemy e Pandas em linguagem Python para carregar a base que está no link abaixo. Faça o download da base do Github, suba-a para o Colab, carregue-a, identifique quantas tabelas temos na base SQLite e armazene cada uma das tabelas em um dataframe próprio."""

import pandas as pd
from sqlalchemy import create_engine, inspect

db_path = '/content/mpg.db'
engine = create_engine(f'sqlite:///{db_path}')

inspector = inspect(engine)

table_names = inspector.get_table_names()

dataframes = {}
for table_name in table_names:
    dataframes[table_name] = pd.read_sql_table(table_name, engine)

for table_name, df in dataframes.items():
    print(f'Tabela: {table_name}')
    print(f'Número de registros: {len(df)}')
    print(df.head())
    print('\n')

"""4- Inclua uma nova tabela na base SQL, diretamente do Python. Ela deverá chamar-se 'Category' e conter os campos 'category_id' (inteiro, chave primária) e 'category' (String). Após criar a tabela, insira um registro na tabela recém criada com os valores 0 (zero) para 'category_id' e "sedan" para 'category'.

"""

from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String

db_path = '/content/mpg.db'

engine = create_engine(f'sqlite:///{db_path}')

metadata = MetaData()

category_table = Table('Category', metadata,
                       Column('category_id', Integer, primary_key=True),
                       Column('category', String)
                       )

metadata.create_all(engine)

ins = category_table.insert().values(category_id=0, category="sedan")
conn = engine.connect()
conn.execute(ins)

conn.close()

print("Tabela 'Category' criada e registro inserido com sucesso!")

"""5- A partir do carregamento da base mpg.db, feito na questão 03, agregue os três dataframes gerados em um dataframe único."""

import pandas as pd

# dataframes = {
#     'Name': name_df,
#     'Observation': observation_df,
#     'Origin': origin_df
# }

merged_df = pd.merge(dataframes['Observation'], dataframes['Name'], on='name_id')
merged_df = pd.merge(merged_df, dataframes['Origin'], on='origin_id')

print(merged_df)

"""6- Elimine da base agregada na questão 05 as variáveis name_id e origin_id."""

merged_df = merged_df.drop(['name_id', 'origin_id'], axis=1)

print(merged_df)

"""7- A partir da base da questão 06, apresente o consumo médio (mpg), por país de origem e responda à seguinte pergunta: qual o país de origem dos carros que mais consomem combustível?"""

consumo_medio_por_origem = merged_df.groupby('origin')['mpg'].mean()

print("Consumo médio por país de origem:")
print(consumo_medio_por_origem)

pais_mais_consumo = consumo_medio_por_origem.idxmax()
consumo_maximo = consumo_medio_por_origem.max()

print("\nO país de origem dos carros que mais consomem combustível é:", pais_mais_consumo)
print("Consumo médio mais alto (mpg):", consumo_maximo)

"""8- A partir da base da questão 06, apresente o peso médio (weight) dos carros, por país e por quantidade de cilindros (cylinders). Apresente a informação por país na dimensão das colunas."""

peso_medio_por_pais_cilindros = merged_df.pivot_table(index='cylinders', columns='origin', values='weight', aggfunc='mean')

print("Peso médio (weight) dos carros por país e por quantidade de cilindros:")
print(peso_medio_por_pais_cilindros)

"""9- A partir da base da questão 06, apresente a mediana da potência (horsepower) dos carros, por ano de fabricação (model_year) e por quantidade de cilindros (cylinders). Apresente a informação por quantidade de cilindros na dimensão das colunas e garanta que os eventuais dados ausentes sejam preenchidos com zero, na saída final."""

mediana_potencia = merged_df.pivot_table(index='model_year', columns='cylinders', values='horsepower', aggfunc='median', fill_value=0)

print("Mediana da potência dos carros por ano de fabricação e por quantidade de cilindros:")
print(mediana_potencia)

"""10- A partir da base da questão 06, apresente a média da potência (horsepower), aceleração (acceleration) e peso (weight) dos carros, por quantidade de cilindros (cylinders) e país de origem (origin).

"""

media_por_cilindros_origem = merged_df.pivot_table(index='cylinders', columns='origin', values=['horsepower', 'acceleration', 'weight'], aggfunc='mean')

print("Média da potência, aceleração e peso dos carros por quantidade de cilindros e país de origem:")
print(media_por_cilindros_origem)